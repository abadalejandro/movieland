{"version":3,"sources":["img/Movie-Icon-1-460x406.png","components/Favorites/Favorites.js","actions/index.js","components/Buscador/Buscador.js","components/NavBar/NavBar.js","components/Movie/Movie.js","App.js","serviceWorker.js","reducers/index.js","store/index.js","index.js"],"names":["module","exports","ConnectedList","props","state","className","scope","id","this","movies","map","movie","index","Fragment","key","to","title","year","replace","onClick","removeMovieFavorite","Component","connect","dispatch","payload","type","Buscador","event","setState","target","value","preventDefault","getMovies","onSubmit","e","handleSubmit","htmlFor","autoComplete","placeholder","onChange","handleChange","imdbID","src","Poster","alt","Title","Year","addMovieFavorite","moviesLoaded","titulo","fetch","then","response","json","NavBar","Logo","width","height","exact","Movie","movieId","match","params","movieDetail","Runtime","Genre","Plot","getMovieDetail","React","idMovie","url","App","path","component","Favorites","Boolean","window","location","hostname","initialState","rootReducer","action","result","Search","concat","filter","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","applyMiddleware","thunkMiddleware","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.25d9e182.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Movie-Icon-1-460x406.40c17060.png\";","import React, { Component } from \"react\";\nimport { removeMovieFavorite } from \"../../actions\";\nimport { connect } from \"react-redux\";\nimport { Link } from 'react-router-dom';\nimport './Favorites.css';\n\nexport class ConnectedList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n    };\n  }\n\n  render() {\n    return (\n      \n      <div className=\"container\">\n        <h2 className=\"text-center mt-4\">Películas Favoritas</h2>\n        {/* Aqui deberias poner tu lista de peliculas! */}\n        <table className=\"table mt-3 table-striped table-hover\">\n          <thead>\n            <tr>\n              <th scope=\"col\" className=\"fs-6\" id=\"titulo-numero\">Numero</th>\n              <th scope=\"col\" className=\"fs-6\">Titulo</th>\n              <th scope=\"col\" className=\"fs-6\">Año</th>\n              <th scope=\"col\" className=\"fs-6\"></th>\n            </tr>\n          </thead>\n          <tbody>\n            {\n               this.props.movies.map((movie, index) => {\n                return (\n                  <React.Fragment key={movie.id}>\n                    <tr>\n\n                      <td className=\"\">\n                        <div className=\"mx-5\">\n                          {index + 1}\n                        </div>\n                      </td>\n\n                      <td >\n                        <Link to={`/movie/${movie.id}`}>\n                          {movie.title}\n                        </Link>\n                      </td>\n\n                      <td>\n                        <div>\n                          {movie.year.replace('–', '')}\n                        </div>\n                      </td>\n\n                      <td>\n                        <button className=\"btn btn-outline-danger btn-sm\" onClick={() => this.props.removeMovieFavorite({ id: movie.id })}>Delete</button>\n                      </td>\n                    </tr>\n                  </React.Fragment>\n                )\n              })\n            }\n          </tbody>\n        </table>\n      </div>\n\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    movies: state.movies\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    removeMovieFavorite: movie => dispatch(removeMovieFavorite(movie)),\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ConnectedList);\n\n\n","const API_KEY = '20dac387';\n// http://www.omdbapi.com/?apikey=20dac387?i=tt0137523\n\n\nexport function getMovies(titulo) {\n    return function (dispatch) {\n\n        return fetch(`http://www.omdbapi.com/?apikey=${API_KEY}&s=${titulo}`)\n            .then(response => response.json())\n            .then(json => {\n                // console.log('movies: ',json);\n                dispatch({\n                    type: \"GET_MOVIES\",\n                    payload: json\n                });\n            });\n    };\n}\n\n// TODO\nexport function getMovieDetail(idMovie) {\n    return function (dispatch) {\n        const url = `http://www.omdbapi.com/?apikey=${API_KEY}&i=${idMovie}`;\n        // console.log(`url: `, url);\n        \n        return fetch(url)\n            .then(response => response.json())\n            .then(json => {\n                dispatch({\n                    type: \"GET_MOVIE_DETAILS\",\n                    payload: json\n                });\n                // console.log(`movieDetail: `,json );\n                \n            });\n    };\n}\n\n\nexport function addMovieFavorite(payload) {\n    return (dispatch) => {\n        return dispatch({\n            type: \"ADD_MOVIE_FAVORITE\",\n            payload: payload\n        });\n    }\n}\n\n\nexport function removeMovieFavorite(payload) {\n    return (dispatch) => {\n        dispatch({\n            type: \"REMOVE_MOVIE_FAVORITE\",\n            payload: payload\n        });\n    }\n}\n\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from 'react-router-dom';\nimport './Buscador.css';\nimport { getMovies, addMovieFavorite } from '../../actions/index';\n\nexport class Buscador extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: \"\",\n    };\n  }\n\n  handleChange(event) {\n    this.setState({ title: event.target.value });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    this.props.getMovies(this.state.title);\n  }\n\n  render() {\n    const { title } = this.state;\n    return (\n      <div>\n        <form className=\"form-container\" onSubmit={(e) => this.handleSubmit(e)}>\n          <div className=\"d-flex justify-content-center align-items-center pt-4\">\n            <label className=\"label fs-5\" htmlFor=\"title\">Película: </label>\n            <input\n              type=\"text\"\n              id=\"title\"\n              autoComplete=\"off\"\n              placeholder=\"Escribir el titulo\"\n              value={title}\n              onChange={(e) => this.handleChange(e)}\n            />\n            <button type=\"submit\" className=\"btn btn-outline-danger btn-sm\">BUSCAR</button>\n          </div>\n        </form>\n\n        {/* Aqui tienes que escribir tu codigo para mostrar la lista de peliculas */}\n\n        <table className=\"container align-middle table-sm table table-striped table-hover mt-3 p-5\">\n          <thead>\n            <tr className=\"\">\n              <th scope=\"col\" className=\"fs-6\"></th>\n              <th scope=\"col\" className=\"fs-6\">Foto</th>\n              <th scope=\"col\" className=\"fs-6\">Titulo</th>\n              <th scope=\"col\" className=\"fs-6\">Año</th>\n              <th scope=\"col\" className=\"fs-6\"></th>\n\n            </tr>\n          </thead>\n          <tbody>\n            {\n              this.props.movies?.map((movie, index) => {\n\n                return (\n                  <React.Fragment key={movie.imdbID}>\n\n                    <tr>\n                      <td className=\"text-center\">{index + 1}</td>\n\n                      <td>\n                        <Link to={`/movie/${movie.imdbID}`}>\n                          <img src={movie.Poster} alt=\"\" />\n                        </Link>\n                      </td>\n\n                      <td >\n                        <div>\n                          <Link to={`/movie/${movie.imdbID}`}>\n                            {movie.Title}\n                          </Link>\n                        </div>\n                      </td>\n\n                      <td>\n                        <div>\n                          {movie.Year.replace('–', ' ')}\n                        </div>\n                      </td>\n                      <td>\n                        <button className=\"btn btn-outline-primary btn-sm\" onClick={() => this.props.addMovieFavorite({ title: movie.Title, id: movie.imdbID, year: movie.Year })}>Add to Favorite</button>\n                      </td>\n                    </tr>\n\n                  </React.Fragment>\n                )\n              })\n            }\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    movies: state.moviesLoaded\n\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    addMovieFavorite: movie => dispatch(addMovieFavorite(movie)),\n    getMovies: title => dispatch(getMovies(title))\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Buscador);\n\n\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n// import Logo from '../../logoHenry.png';\nimport Logo from '../../img/Movie-Icon-1-460x406.png';\n\n\nimport './Navbar.css';\n\nexport default function NavBar() {\n    return (\n        <header className=\"navbar\">\n            <div id=\"logo\" className=\"animate__animated animate__backInUp\">\n                <img id=\"logoHenry\" src={Logo} width=\"80\" height=\"80\" className=\"d-inline-block align-top\" alt=\"\" />\n            </div>\n            <div id=\"title\" className=\"my-font text-warning display-4 animate__animated animate__bounceInLeft\">\n                Movieland\n            </div>\n            <nav>\n                <ul className=\"list\">\n                    <li className=\"list-item\">\n                        <NavLink exact to=\"/\" >Home</NavLink>\n                        <NavLink to=\"/favs\" >Favoritas</NavLink>\n                    </li>\n                </ul>\n            </nav>\n        </header>\n    )\n}","import React from 'react';\nimport { connect } from 'react-redux';\nimport { getMovieDetail } from '../../actions/index';\n\nimport './Movie.css';\n\nclass Movie extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            movie: {}\n        };\n        // manera convencional\n        this.movieId = this.props.match.params.id;\n        // usando destructuring\n        // const { match: { params: { id }}} = this.props;\n    }\n\n    render() {\n\n        return (\n            <div className=\"movie-main-container\">\n                <div className=\"movie-container\">\n                    <img className=\"movie-child red-child\" src={this.props.movieDetail?.Poster} alt=\"Film\" />\n\n                    <div className=\"movie-child movie-info\" >\n                        <h3 >{this.props.movieDetail?.Title}</h3>\n                        <div id=\"div-movie-subinfo\">\n                            <p>Año: <small>{this.props.movieDetail?.Year}</small></p>\n                            <p>Duración: <small>{this.props.movieDetail?.Runtime}</small></p>\n                        </div>\n                        <p>Género: <small>{this.props.movieDetail?.Genre}</small></p>\n                        <p id='movie-detail'>{this.props.movieDetail?.Plot}</p>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    componentDidMount() {\n        this.setState();\n        const movieId = this.props.match.params.id;\n        this.props.getMovieDetail(movieId);\n\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        movieDetail: state.movieDetail\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        getMovieDetail: movieId => dispatch(getMovieDetail(movieId)),\n    };\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Movie);","import React from \"react\";\n\nimport Favorites from \"./components/Favorites/Favorites\";\nimport Buscador from \"./components/Buscador/Buscador\";\nimport NavBar from \"./components/NavBar/NavBar\";\nimport { Route } from \"react-router-dom\";\nimport Movie from \"./components/Movie/Movie\";\n\nfunction App() {\n  return (\n      <React.Fragment>\n          <NavBar />\n          <Route exact path=\"/\" component={Buscador} />\n          <Route path=\"/favs\" component={Favorites} />\n          <Route path=\"/movie/:id\" component={Movie} />\n      </React.Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initialState = {\n  movies: [],\n  moviesLoaded: [],\n  movieDetail: {}\n};\n\n\nfunction rootReducer(state = initialState, action) {\n\n  if (action.type === \"GET_MOVIES\") {\n    const result = {\n      ...state,\n      moviesLoaded: action.payload.Search,\n    };\n  \n    return result;\n  }\n \n  if (action.type === \"GET_MOVIE_DETAILS\") {\n\n    const result = {\n      ...state,\n      movieDetail: action.payload\n    };\n\n    return result;\n  }\n\n  if (action.type === \"ADD_MOVIE_FAVORITE\") {\n    const result = {\n      ...state,\n      movies: state.movies.concat(action.payload)\n    }\n    return result;\n  }\n\n  if (action.type === \"REMOVE_MOVIE_FAVORITE\") {\n    return {\n      ...state,\n      movies: state.movies.filter(movie => movie.id !== action.payload.id)\n    };\n  }\n\n  return state;\n\n}\n\nexport default rootReducer;","import { createStore, applyMiddleware } from \"redux\";\nimport rootReducer from \"../reducers/index\";\nimport thunkMiddleware from \"redux-thunk\";\n\nconst store = createStore(\n    rootReducer,\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\n    applyMiddleware(thunkMiddleware)\n);\n\nexport default store;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from \"react-redux\";\nimport store from \"./store/index\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}